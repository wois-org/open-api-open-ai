import Config

config :oapi_generator,
  default: [
    naming: [
      group: [
        # Endpoints
        Audio,
        Audio.Speech,
        Audio.Transcription,
        Audio.Transcription.CreateResponse,
        Audio.Translation,
        Audio.Translation.CreateResponse,
        Chat,
        Chat.Completion,
        Chat.Completion.CreateRequest,
        Chat.Completion.CreateResponse,
        Chat.Completion.CreateResponse.Choice,
        Chat.Completion.Request,
        Chat.Completion.Response,
        Chat.Completion.Tool,
        Chat.Completion.NamedTool,
        Chat.Completion.MessageTool,
        Embedding,
        Embedding.CreateRequest,
        Embedding.CreateResponse,
        FineTuning,
        FineTuning.Integration,
        FineTuning.Job,
        FineTuning.Job.Checkpoint,
        FineTuning.Job.CreateRequest,
        FineTuning.Job.Event,
        Batch,
        File,
        Image,
        Model,
        Moderation,
        Moderation.CreateRequest,
        Moderation.CreateResponse,
        Moderation.CreateResponse.Result,

        # Assistants
        Assistants,
        Assistant,
        Assistant.CreateRequest,
        Assistant.CreateRequest.ToolResources,
        Assistant.UpdateRequest,
        Assistant.UpdateRequest.ToolResources,
        Assistant.Object,
        Assistant.Object.Tool,
        Assistant.Tool,
        Assistant.Tool.File,
        Assistant.Tool.Resources,
        Assistant.Tool.Outputs,
        Assistant.Tool.Outputs.RunSubmitRequest,
        Message,
        Message.Content,
        Message.Content.Text,
        Message.Content.Image,
        Message.CreateRequest,
        Message.UpdateRequest,
        Run,
        Run.Step,
        Run.RequiredAction,
        Run.ToolCall,
        Thread,
        Thread.CreateRequest,
        Thread.CreateAndRunRequest,
        Thread.UpdateRequest,
        Thread.UpdateRequest,
        Thread.ToolResources,
        VectorStore,
        VectorStore.File,
        VectorStore.File.Batch,
        VectorStore.File.ChunkingStrategy,
        VectorStore.File.ChunkingStrategy.Static,
        VectorStore.File.ChunkingStrategy.Auto,
        VectorStore.File.ChunkingStrategy.Other,

        # Legacy
        Completion,
        Completion.CreateRequest,
        Completion.CreateResponse,
        Completion.CreateResponse.Choice
      ],
      rename: [
        {"Object", ""},
        {"Modify", "Update"},
        {"Assistants", "Assistant"},
        {"Attachments", "Attachment"},
        {"Batches", "Batch"},
        {"Files", "File"},
        {"Images", "Image"},
        {"Messages", "Message"},
        {"Models", "Model"},
        {"Runs", "Run"},
        {"VectorStores", "VectorStore"},
        {"Tools", "Tool"},
        {"Events", "Event"},
        {"Checkpoints", "Checkpoint"},
        {"Results", "Result"},
        {"Jobs", "Job"},
        {"Choices", "Choice"},
        {"Functions", "Function"},
        {"Steps", "Step"},
        {~r/(.*)Create(.*)Request(.*)/, "\\1\\2CreateRequest\\3"},
        {~r/(.*)Create(.*)Response(.*)/, "\\1\\2CreateResponse\\3"},
        {~r/(.*)Update(.*)Request(.*)/, "\\1\\2UpdateRequest\\3"},
        {~r/(.*)Update(.*)Response(.*)/, "\\1\\2UpdateResponse\\3"},
        {~r/(.*)Delete(.*)Request(.*)/, "\\1\\2DeleteRequest\\3"},
        {~r/(.*)Delete(.*)Response(.*)/, "\\1\\2DeleteResponse\\3"},
        {~r/(.*)ListPaginated(.*)Request(.*)/, "\\1\\2ListRequest\\3"},
        {~r/(.*)ListPaginated(.*)Response(.*)/, "\\1\\2ListResponse\\3"},
        {~r/(.*)List(.*)Request(.*)/, "\\1\\2ListRequest\\3"},
        {~r/(.*)List(.*)Response(.*)/, "\\1\\2ListResponse\\3"},
        {~r/(.*)Submit(.*)Request(.*)/, "\\1\\2SubmitRequest\\3"},
        {~r/(.*)Submit(.*)Response(.*)/, "\\1\\2SubmitResponse\\3"},
        {~r/(.*)ChunkingStrategy(.*)/, "VectorStoreFileChunkingStrategy\\1\\2"},
        {"AndRunCreate", "CreateAndRun"},
        {~r/^Speech/, "AudioSpeech"},
        {~r/^Transcription/, "AudioTranscription"},
        {~r/^Translation/, "AudioTranslation"},
        {~r/^ToolOutputsRun/, "AssistantToolOutputsRun"},
        {~r/^OpenAIFile$/, "File"}
      ]
    ],
    output: [
      base_module: OpenAi,
      # extra_fields: [__info__: :map],
      location: "lib/",
      operation_subdirectory: "operations/",
      schema_subdirectory: "schemas/"
      # schema_use: GitHub.Encoder,
      # types: [
      #   error: {GitHub.Error, :t}
      # ]
    ]
  ]

import_config "version_release.exs"
